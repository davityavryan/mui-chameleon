{"version":3,"file":"useControlled-25b122d6.js","sources":["../../node_modules/@mui/utils/esm/useControlled.js"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"],"names":["useControlled","controlled","defaultProp","name","state","isControlled","React.useRef","valueState","setValue","React.useState","value","setValueIfUncontrolled","React.useCallback","newValue"],"mappings":"wCAEe,SAASA,EAAc,CACpC,WAAAC,EACA,QAASC,EACT,KAAAC,EACA,MAAAC,EAAQ,OACV,EAAG,CAED,KAAM,CACJ,QAASC,CACb,EAAMC,EAAY,OAACL,IAAe,MAAS,EACnC,CAACM,EAAYC,CAAQ,EAAIC,EAAc,SAACP,CAAW,EACnDQ,EAAQL,EAAeJ,EAAaM,EAgBpCI,EAAyBC,EAAiB,YAACC,GAAY,CACtDR,GACHG,EAASK,CAAQ,CAEpB,EAAE,CAAE,CAAA,EACL,MAAO,CAACH,EAAOC,CAAsB,CACvC","x_google_ignoreList":[0]}