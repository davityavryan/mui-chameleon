{"version":3,"file":"Checkbox-8eaccc1c.js","sources":["../../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../../node_modules/@mui/material/Checkbox/checkboxClasses.js","../../node_modules/@mui/material/Checkbox/Checkbox.js"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon: iconProp = defaultIcon,\n      indeterminate = false,\n      indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n      inputProps,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["CheckBoxOutlineBlankIcon","createSvgIcon","_jsx","CheckBoxIcon","IndeterminateCheckBoxIcon","getCheckboxUtilityClass","slot","generateUtilityClass","checkboxClasses","generateUtilityClasses","checkboxClasses$1","_excluded","useUtilityClasses","ownerState","classes","indeterminate","color","slots","capitalize","composedClasses","composeClasses","_extends","CheckboxRoot","styled","SwitchBase","prop","rootShouldForwardProp","props","styles","theme","alpha","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","React.forwardRef","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","iconProp","indeterminateIconProp","inputProps","size","className","other","_objectWithoutPropertiesLoose","icon","indeterminateIcon","React.cloneElement","clsx","Checkbox$1"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}