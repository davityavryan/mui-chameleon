{"version":3,"file":"utils-a73c94d0.js","sources":["../../node_modules/@mui/material/InputBase/utils.js"],"sourcesContent":["// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nexport function isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}"],"names":["hasValue","value","isFilled","obj","SSR","isAdornedStart"],"mappings":"AAMO,SAASA,EAASC,EAAO,CAC9B,OAAOA,GAAS,MAAQ,EAAE,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,EACrE,CASO,SAASC,EAASC,EAAKC,EAAM,GAAO,CACzC,OAAOD,IAAQH,EAASG,EAAI,KAAK,GAAKA,EAAI,QAAU,IAAMC,GAAOJ,EAASG,EAAI,YAAY,GAAKA,EAAI,eAAiB,GACtH,CAQO,SAASE,EAAeF,EAAK,CAClC,OAAOA,EAAI,cACb","x_google_ignoreList":[0]}