{"version":3,"file":"InputAdornmentsTextFields-89cd2ba9.js","sources":["../../node_modules/@mui/icons-material/esm/Visibility.js","../../node_modules/@mui/icons-material/esm/VisibilityOff.js","../../src/Pages/TextFieldsPage/Components/InputAdornmentsTextFields/InputAdornmentsTextFields.tsx"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","// Example is taken from https://mui.com/components/text-fields/#input-adornments\n\nimport React from 'react';\n\nimport {\n    Box,\n    IconButton,\n    Input,\n    FilledInput,\n    OutlinedInput,\n    InputLabel,\n    InputAdornment,\n    FormHelperText,\n    FormControl,\n    TextField,\n} from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\n\nfunction InputAdornmentsTextFields() {\n    const [values, setValues] = React.useState({\n        amount: '',\n        password: '',\n        weight: '',\n        weightRange: '',\n        showPassword: false,\n    });\n\n    const handleChange: (prop: string) => React.ChangeEventHandler<HTMLInputElement> = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword: React.MouseEventHandler = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <Box display=\"flex\" flexWrap=\"wrap\">\n            <div>\n                <TextField\n                    label=\"With normal TextField\"\n                    id=\"standard-start-adornment\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n                    }}\n                    sx={{ width: '25ch', m: 1 }}\n                />\n                <FormControl sx={{ width: '25ch', m: 1, mt: 3 }}>\n                    <Input\n                        id=\"standard-adornment-weight\"\n                        value={values.weight}\n                        onChange={handleChange('weight')}\n                        endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                        aria-describedby=\"standard-weight-helper-text\"\n                        inputProps={{\n                            'aria-label': 'weight',\n                        }}\n                    />\n                    <FormHelperText id=\"standard-weight-helper-text\">Weight</FormHelperText>\n                </FormControl>\n                <FormControl sx={{ width: '25ch', m: 1 }}>\n                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\n                    <Input\n                        id=\"standard-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl sx={{ m: 1 }} fullWidth>\n                    <InputLabel htmlFor=\"standard-adornment-amount\">Amount</InputLabel>\n                    <Input\n                        id=\"standard-adornment-amount\"\n                        value={values.amount}\n                        onChange={handleChange('amount')}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </div>\n            <div>\n                <TextField\n                    label=\"With normal TextField\"\n                    id=\"filled-start-adornment\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n                    }}\n                    variant=\"filled\"\n                    sx={{ width: '25ch', m: 1 }}\n                />\n                <FormControl sx={{ width: '25ch', m: 1 }} variant=\"filled\">\n                    <FilledInput\n                        id=\"filled-adornment-weight\"\n                        value={values.weight}\n                        onChange={handleChange('weight')}\n                        endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                        aria-describedby=\"filled-weight-helper-text\"\n                        inputProps={{\n                            'aria-label': 'weight',\n                        }}\n                    />\n                    <FormHelperText id=\"filled-weight-helper-text\">Weight</FormHelperText>\n                </FormControl>\n                <FormControl sx={{ width: '25ch', m: 1 }} variant=\"filled\">\n                    <InputLabel htmlFor=\"filled-adornment-password\">Password</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                    />\n                </FormControl>\n                <FormControl sx={{ m: 1 }} variant=\"filled\" fullWidth>\n                    <InputLabel htmlFor=\"filled-adornment-amount\">Amount</InputLabel>\n                    <FilledInput\n                        id=\"filled-adornment-amount\"\n                        value={values.amount}\n                        onChange={handleChange('amount')}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                    />\n                </FormControl>\n            </div>\n            <div>\n                <TextField\n                    label=\"With normal TextField\"\n                    id=\"outlined-start-adornment\"\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n                    }}\n                    variant=\"outlined\"\n                    sx={{ width: '25ch', m: 1 }}\n                />\n                <FormControl sx={{ width: '25ch', m: 1 }} variant=\"outlined\">\n                    <OutlinedInput\n                        id=\"outlined-adornment-weight\"\n                        value={values.weight}\n                        onChange={handleChange('weight')}\n                        endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n                        aria-describedby=\"outlined-weight-helper-text\"\n                        inputProps={{\n                            'aria-label': 'weight',\n                        }}\n                        // labelWidth={0}\n                    />\n                    <FormHelperText id=\"outlined-weight-helper-text\">Weight</FormHelperText>\n                </FormControl>\n                <FormControl sx={{ width: '25ch', m: 1 }} variant=\"outlined\">\n                    <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-password\"\n                        type={values.showPassword ? 'text' : 'password'}\n                        value={values.password}\n                        onChange={handleChange('password')}\n                        endAdornment={\n                            <InputAdornment position=\"end\">\n                                <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                >\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                            </InputAdornment>\n                        }\n                        // labelWidth={70}\n                    />\n                </FormControl>\n                <FormControl sx={{ m: 1 }} variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-amount\"\n                        value={values.amount}\n                        onChange={handleChange('amount')}\n                        startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                        // labelWidth={60}\n                    />\n                </FormControl>\n            </div>\n        </Box>\n    );\n}\n\nexport default InputAdornmentsTextFields;\n"],"names":["Visibility","createSvgIcon","_jsx","VisibilityOff","InputAdornmentsTextFields","values","setValues","React","handleChange","prop","event","handleClickShowPassword","handleMouseDownPassword","jsxs","Box","jsx","TextField","InputAdornment","FormControl","Input","FormHelperText","InputLabel","IconButton","FilledInput","OutlinedInput"],"mappings":"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","x_google_ignoreList":[0,1]}